package org.example.icatch.controller;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.http.ResponseEntity;
import java.util.HashMap;
import java.util.Map;

@Controller
public class MainController {

    // 루트 경로를 index.html로 포워딩
    @GetMapping("/")
    public String index() {
        return "forward:/index.html";
    }

    // React SPA 라우팅을 위한 매핑 - 구체적인 경로들
    @GetMapping({"/admin", "/admin/**", "/ai", "/ai/**", "/users", "/users/**",
            "/devices", "/devices/**", "/notifications", "/notifications/**"})
    public String spaRouting() {
        return "forward:/index.html";
    }

    // API가 아닌 모든 경로를 index.html로 포워딩 (최종 fallback)
    @RequestMapping(value = "/{path:^(?!api|static).*}")
    public String fallbackForward() {
        return "forward:/index.html";
    }

    // 상태 확인용 엔드포인트
    @GetMapping("/api/health")
    @ResponseBody
    public ResponseEntity<Map<String, Object>> health() {
        Map<String, Object> response = new HashMap<>();
        response.put("status", "UP");
        response.put("message", "서버가 정상 작동 중입니다.");
        return ResponseEntity.ok(response);
    }

    // 오류 페이지 처리
    @GetMapping("/error")
    @ResponseBody
    public ResponseEntity<Map<String, Object>> error() {
        Map<String, Object> response = new HashMap<>();
        response.put("status", "ERROR");
        response.put("message", "오류가 발생했습니다.");
        return ResponseEntity.internalServerError().body(response);
    }
}